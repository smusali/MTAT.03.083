Grable, a digital platform, facilitates interactions between two main user entities: restaurants and diners, each required to establish an authorized account for secure and customized access.

Restaurants on Grable possess accounts with distinct attributes: a unique identifier, name, a composite location attribute (address, city, state, postal code), phone number, email, and a dynamic menu. This menu, a collection of items, holds specific attributes for each item: unique identifier, name, a string of aggregated ingredients, dietary specifications, category (such as appetizer, entr√©e, dessert, etc.), price, and availability status. Restaurants can enable real-time CRUD (Create, Retrieve, Update, and Delete) operations on these menu items, adjusting to current availability or other considerations.

Diner accounts, while also containing a unique identifier, name, phone number, and email, differ by including dietary preferences and a list of payment methods, each a complex type holding details like the payment method type and necessary transaction information. Diners' interaction with Grable involves browsing these dynamic menus and placing orders. An order, a separate entity, includes its unique identifier, a list of item references, a timestamp, table number, and two enumerations for tracking: order status (Pending, In-Progress, Completed, Canceled) and payment status (Unpaid, Paid, Refunded), ensuring diners select only from available items.

Payment processing in Grable is integral, functioning through a secure subsystem that accommodates various payment methods (enumerated as Card, Apple Pay, and Google Pay) and records each transaction with its amount, chosen payment method, and an enumeration for transaction status (Successful, Failed, Pending). After processing, payments are directed to the appropriate restaurant, with a commission subtracted, requiring precise financial handling.

Grable's system architecture emphasizes security through authentication and authorization, real-time data interactions, and user customization, extending to real-time notifications for order and payment updates. Its backend structure is scalable, prepared for an expanding user base and increased transactions, and it maintains system logs and monitoring for performance assessment and irregularity identification.